// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Issue {
  id          Int              @id @default(autoincrement())
  title       String           @db.VarChar(255)
  description String           @db.Text
  status      Status           @default(OPEN)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  createdBy   String           @default("") @db.VarChar(10)
  comments    IssueComment[]
  labels      LabelsOnIssues[]
}

model IssueComment {
  id          Int      @id @default(autoincrement())
  issue       Issue    @relation(fields: [issueId], references: [id], onDelete: Cascade)
  issueId     Int
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  createdBy   String   @default("") @db.VarChar(10)
}

model LabelsOnIssues {
  issue   Issue @relation(fields: [issueId], references: [id])
  issueId Int // relation scalar field
  label   Label @relation(fields: [labelId], references: [id])
  labelId Int

  @@id([issueId, labelId])
}

// Many-to-many relationship with the model Issue 
// (issues can have many labels, and labels can be assigned to many issues) 
model Label {
  id     Int              @id @default(autoincrement())
  name   String           @db.Text
  issues LabelsOnIssues[]
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}
